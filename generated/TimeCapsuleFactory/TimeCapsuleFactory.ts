// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class OwnerChanged extends ethereum.Event {
  get params(): OwnerChanged__Params {
    return new OwnerChanged__Params(this);
  }
}

export class OwnerChanged__Params {
  _event: OwnerChanged;

  constructor(event: OwnerChanged) {
    this._event = event;
  }

  get capsuleAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TimeCapsuleCreated extends ethereum.Event {
  get params(): TimeCapsuleCreated__Params {
    return new TimeCapsuleCreated__Params(this);
  }
}

export class TimeCapsuleCreated__Params {
  _event: TimeCapsuleCreated;

  constructor(event: TimeCapsuleCreated) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get capsuleAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TimeCapsuleFactory extends ethereum.SmartContract {
  static bind(address: Address): TimeCapsuleFactory {
    return new TimeCapsuleFactory("TimeCapsuleFactory", address);
  }

  capsuleAddressOf(_owner: Address): Address {
    let result = super.call(
      "capsuleAddressOf",
      "capsuleAddressOf(address):(address)",
      [ethereum.Value.fromAddress(_owner)],
    );

    return result[0].toAddress();
  }

  try_capsuleAddressOf(_owner: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "capsuleAddressOf",
      "capsuleAddressOf(address):(address)",
      [ethereum.Value.fromAddress(_owner)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  checkRecoveryAddress(_owner: Address, _addressHash: Bytes): boolean {
    let result = super.call(
      "checkRecoveryAddress",
      "checkRecoveryAddress(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromFixedBytes(_addressHash),
      ],
    );

    return result[0].toBoolean();
  }

  try_checkRecoveryAddress(
    _owner: Address,
    _addressHash: Bytes,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkRecoveryAddress",
      "checkRecoveryAddress(address,bytes32):(bool)",
      [
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromFixedBytes(_addressHash),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRecoveryHashValidated(_owner: Address): boolean {
    let result = super.call(
      "isRecoveryHashValidated",
      "isRecoveryHashValidated(address):(bool)",
      [ethereum.Value.fromAddress(_owner)],
    );

    return result[0].toBoolean();
  }

  try_isRecoveryHashValidated(_owner: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRecoveryHashValidated",
      "isRecoveryHashValidated(address):(bool)",
      [ethereum.Value.fromAddress(_owner)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  predictedCapsuleAddress(ownerAddress: Address): Address {
    let result = super.call(
      "predictedCapsuleAddress",
      "predictedCapsuleAddress(address):(address)",
      [ethereum.Value.fromAddress(ownerAddress)],
    );

    return result[0].toAddress();
  }

  try_predictedCapsuleAddress(
    ownerAddress: Address,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "predictedCapsuleAddress",
      "predictedCapsuleAddress(address):(address)",
      [ethereum.Value.fromAddress(ownerAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _timeCapsuleImplementationAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _feeSplitterContract(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateTimeCapsuleCall extends ethereum.Call {
  get inputs(): CreateTimeCapsuleCall__Inputs {
    return new CreateTimeCapsuleCall__Inputs(this);
  }

  get outputs(): CreateTimeCapsuleCall__Outputs {
    return new CreateTimeCapsuleCall__Outputs(this);
  }
}

export class CreateTimeCapsuleCall__Inputs {
  _call: CreateTimeCapsuleCall;

  constructor(call: CreateTimeCapsuleCall) {
    this._call = call;
  }

  get _recoveryAddressHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreateTimeCapsuleCall__Outputs {
  _call: CreateTimeCapsuleCall;

  constructor(call: CreateTimeCapsuleCall) {
    this._call = call;
  }
}

export class CreateTimeCapsule1Call extends ethereum.Call {
  get inputs(): CreateTimeCapsule1Call__Inputs {
    return new CreateTimeCapsule1Call__Inputs(this);
  }

  get outputs(): CreateTimeCapsule1Call__Outputs {
    return new CreateTimeCapsule1Call__Outputs(this);
  }
}

export class CreateTimeCapsule1Call__Inputs {
  _call: CreateTimeCapsule1Call;

  constructor(call: CreateTimeCapsule1Call) {
    this._call = call;
  }
}

export class CreateTimeCapsule1Call__Outputs {
  _call: CreateTimeCapsule1Call;

  constructor(call: CreateTimeCapsule1Call) {
    this._call = call;
  }
}

export class RecoverOwnershipCall extends ethereum.Call {
  get inputs(): RecoverOwnershipCall__Inputs {
    return new RecoverOwnershipCall__Inputs(this);
  }

  get outputs(): RecoverOwnershipCall__Outputs {
    return new RecoverOwnershipCall__Outputs(this);
  }
}

export class RecoverOwnershipCall__Inputs {
  _call: RecoverOwnershipCall;

  constructor(call: RecoverOwnershipCall) {
    this._call = call;
  }

  get _oldOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _newOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RecoverOwnershipCall__Outputs {
  _call: RecoverOwnershipCall;

  constructor(call: RecoverOwnershipCall) {
    this._call = call;
  }
}

export class ValidateRecoveryAddressHashCall extends ethereum.Call {
  get inputs(): ValidateRecoveryAddressHashCall__Inputs {
    return new ValidateRecoveryAddressHashCall__Inputs(this);
  }

  get outputs(): ValidateRecoveryAddressHashCall__Outputs {
    return new ValidateRecoveryAddressHashCall__Outputs(this);
  }
}

export class ValidateRecoveryAddressHashCall__Inputs {
  _call: ValidateRecoveryAddressHashCall;

  constructor(call: ValidateRecoveryAddressHashCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _recoveryAddressHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _signature(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ValidateRecoveryAddressHashCall__Outputs {
  _call: ValidateRecoveryAddressHashCall;

  constructor(call: ValidateRecoveryAddressHashCall) {
    this._call = call;
  }
}
