// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LockReleased extends ethereum.Event {
  get params(): LockReleased__Params {
    return new LockReleased__Params(this);
  }
}

export class LockReleased__Params {
  _event: LockReleased;

  constructor(event: LockReleased) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lockIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Locked extends ethereum.Event {
  get params(): Locked__Params {
    return new Locked__Params(this);
  }
}

export class Locked__Params {
  _event: Locked;

  constructor(event: Locked) {
    this._event = event;
  }

  get tag(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get tokenAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get lockIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get lockTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get unlockTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get lockType(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class Recovered extends ethereum.Event {
  get params(): Recovered__Params {
    return new Recovered__Params(this);
  }
}

export class Recovered__Params {
  _event: Recovered;

  constructor(event: Recovered) {
    this._event = event;
  }
}

export class RecoveryInitiated extends ethereum.Event {
  get params(): RecoveryInitiated__Params {
    return new RecoveryInitiated__Params(this);
  }
}

export class RecoveryInitiated__Params {
  _event: RecoveryInitiated;

  constructor(event: RecoveryInitiated) {
    this._event = event;
  }
}

export class Withdrawal extends ethereum.Event {
  get params(): Withdrawal__Params {
    return new Withdrawal__Params(this);
  }
}

export class Withdrawal__Params {
  _event: Withdrawal;

  constructor(event: Withdrawal) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lockIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class WithdrawalCancelled extends ethereum.Event {
  get params(): WithdrawalCancelled__Params {
    return new WithdrawalCancelled__Params(this);
  }
}

export class WithdrawalCancelled__Params {
  _event: WithdrawalCancelled;

  constructor(event: WithdrawalCancelled) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lockIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class WithdrawalInitiated extends ethereum.Event {
  get params(): WithdrawalInitiated__Params {
    return new WithdrawalInitiated__Params(this);
  }
}

export class WithdrawalInitiated__Params {
  _event: WithdrawalInitiated;

  constructor(event: WithdrawalInitiated) {
    this._event = event;
  }

  get tokenAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lockIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TimeCapsule__lockDataResultLockStruct extends ethereum.Tuple {
  get state(): i32 {
    return this[0].toI32();
  }

  get tag(): Bytes {
    return this[1].toBytes();
  }

  get lockTime(): BigInt {
    return this[2].toBigInt();
  }

  get unlockTime(): BigInt {
    return this[3].toBigInt();
  }

  get releaseTime(): BigInt {
    return this[4].toBigInt();
  }

  get lockType(): i32 {
    return this[5].toI32();
  }

  get unlockHash(): Bytes {
    return this[6].toBytes();
  }

  get lockedAmount(): BigInt {
    return this[7].toBigInt();
  }

  get withdrawnToDate(): BigInt {
    return this[8].toBigInt();
  }

  get timelockedAmount(): BigInt {
    return this[9].toBigInt();
  }
}

export class TimeCapsule extends ethereum.SmartContract {
  static bind(address: Address): TimeCapsule {
    return new TimeCapsule("TimeCapsule", address);
  }

  availableBalance(_tokenAddress: Address): BigInt {
    let result = super.call(
      "availableBalance",
      "availableBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_tokenAddress)],
    );

    return result[0].toBigInt();
  }

  try_availableBalance(_tokenAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "availableBalance",
      "availableBalance(address):(uint256)",
      [ethereum.Value.fromAddress(_tokenAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  calculateAllowance(_tokenAddress: Address, _index: BigInt): BigInt {
    let result = super.call(
      "calculateAllowance",
      "calculateAllowance(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_index),
      ],
    );

    return result[0].toBigInt();
  }

  try_calculateAllowance(
    _tokenAddress: Address,
    _index: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateAllowance",
      "calculateAllowance(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_index),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkBehaviorLockCode(
    _tokenAddress: Address,
    _lockIndex: BigInt,
    _unlockCode: string,
  ): boolean {
    let result = super.call(
      "checkBehaviorLockCode",
      "checkBehaviorLockCode(address,uint256,string):(bool)",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_lockIndex),
        ethereum.Value.fromString(_unlockCode),
      ],
    );

    return result[0].toBoolean();
  }

  try_checkBehaviorLockCode(
    _tokenAddress: Address,
    _lockIndex: BigInt,
    _unlockCode: string,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkBehaviorLockCode",
      "checkBehaviorLockCode(address,uint256,string):(bool)",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_lockIndex),
        ethereum.Value.fromString(_unlockCode),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkRecoveryAddress(_recoveryAddressHash: Bytes): boolean {
    let result = super.call(
      "checkRecoveryAddress",
      "checkRecoveryAddress(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(_recoveryAddressHash)],
    );

    return result[0].toBoolean();
  }

  try_checkRecoveryAddress(
    _recoveryAddressHash: Bytes,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "checkRecoveryAddress",
      "checkRecoveryAddress(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(_recoveryAddressHash)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  initiateWithdrawal(_tokenAddress: Address, _lockIndex: BigInt): BigInt {
    let result = super.call(
      "initiateWithdrawal",
      "initiateWithdrawal(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_lockIndex),
      ],
    );

    return result[0].toBigInt();
  }

  try_initiateWithdrawal(
    _tokenAddress: Address,
    _lockIndex: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "initiateWithdrawal",
      "initiateWithdrawal(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_lockIndex),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isInitialized(): boolean {
    let result = super.call("isInitialized", "isInitialized():(bool)", []);

    return result[0].toBoolean();
  }

  try_isInitialized(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isInitialized", "isInitialized():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRecoveryHashValidated(): boolean {
    let result = super.call(
      "isRecoveryHashValidated",
      "isRecoveryHashValidated():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_isRecoveryHashValidated(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isRecoveryHashValidated",
      "isRecoveryHashValidated():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lockCount(_tokenAddress: Address): BigInt {
    let result = super.call("lockCount", "lockCount(address):(uint256)", [
      ethereum.Value.fromAddress(_tokenAddress),
    ]);

    return result[0].toBigInt();
  }

  try_lockCount(_tokenAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lockCount", "lockCount(address):(uint256)", [
      ethereum.Value.fromAddress(_tokenAddress),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  lockData(
    _tokenAddress: Address,
    _index: BigInt,
  ): TimeCapsule__lockDataResultLockStruct {
    let result = super.call(
      "lockData",
      "lockData(address,uint256):((uint8,bytes32,uint64,uint64,uint64,uint8,bytes6,uint256,uint256,uint256))",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_index),
      ],
    );

    return changetype<TimeCapsule__lockDataResultLockStruct>(
      result[0].toTuple(),
    );
  }

  try_lockData(
    _tokenAddress: Address,
    _index: BigInt,
  ): ethereum.CallResult<TimeCapsule__lockDataResultLockStruct> {
    let result = super.tryCall(
      "lockData",
      "lockData(address,uint256):((uint8,bytes32,uint64,uint64,uint64,uint8,bytes6,uint256,uint256,uint256))",
      [
        ethereum.Value.fromAddress(_tokenAddress),
        ethereum.Value.fromUnsignedBigInt(_index),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<TimeCapsule__lockDataResultLockStruct>(value[0].toTuple()),
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaultStatus(): i32 {
    let result = super.call("vaultStatus", "vaultStatus():(uint8)", []);

    return result[0].toI32();
  }

  try_vaultStatus(): ethereum.CallResult<i32> {
    let result = super.tryCall("vaultStatus", "vaultStatus():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelWithdrawalCall extends ethereum.Call {
  get inputs(): CancelWithdrawalCall__Inputs {
    return new CancelWithdrawalCall__Inputs(this);
  }

  get outputs(): CancelWithdrawalCall__Outputs {
    return new CancelWithdrawalCall__Outputs(this);
  }
}

export class CancelWithdrawalCall__Inputs {
  _call: CancelWithdrawalCall;

  constructor(call: CancelWithdrawalCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lockIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CancelWithdrawalCall__Outputs {
  _call: CancelWithdrawalCall;

  constructor(call: CancelWithdrawalCall) {
    this._call = call;
  }
}

export class ClaimBehaviorLockCall extends ethereum.Call {
  get inputs(): ClaimBehaviorLockCall__Inputs {
    return new ClaimBehaviorLockCall__Inputs(this);
  }

  get outputs(): ClaimBehaviorLockCall__Outputs {
    return new ClaimBehaviorLockCall__Outputs(this);
  }
}

export class ClaimBehaviorLockCall__Inputs {
  _call: ClaimBehaviorLockCall;

  constructor(call: ClaimBehaviorLockCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lockIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _unlockCode(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class ClaimBehaviorLockCall__Outputs {
  _call: ClaimBehaviorLockCall;

  constructor(call: ClaimBehaviorLockCall) {
    this._call = call;
  }
}

export class CreateBehaviorLockCall extends ethereum.Call {
  get inputs(): CreateBehaviorLockCall__Inputs {
    return new CreateBehaviorLockCall__Inputs(this);
  }

  get outputs(): CreateBehaviorLockCall__Outputs {
    return new CreateBehaviorLockCall__Outputs(this);
  }
}

export class CreateBehaviorLockCall__Inputs {
  _call: CreateBehaviorLockCall;

  constructor(call: CreateBehaviorLockCall) {
    this._call = call;
  }

  get _tag(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _lockAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _lockTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _unlockHash(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class CreateBehaviorLockCall__Outputs {
  _call: CreateBehaviorLockCall;

  constructor(call: CreateBehaviorLockCall) {
    this._call = call;
  }

  get lockIndex(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateHardLockCall extends ethereum.Call {
  get inputs(): CreateHardLockCall__Inputs {
    return new CreateHardLockCall__Inputs(this);
  }

  get outputs(): CreateHardLockCall__Outputs {
    return new CreateHardLockCall__Outputs(this);
  }
}

export class CreateHardLockCall__Inputs {
  _call: CreateHardLockCall;

  constructor(call: CreateHardLockCall) {
    this._call = call;
  }

  get _tag(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _lockAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _lockTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _unlockTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateHardLockCall__Outputs {
  _call: CreateHardLockCall;

  constructor(call: CreateHardLockCall) {
    this._call = call;
  }

  get lockIndex(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CreateLockCall extends ethereum.Call {
  get inputs(): CreateLockCall__Inputs {
    return new CreateLockCall__Inputs(this);
  }

  get outputs(): CreateLockCall__Outputs {
    return new CreateLockCall__Outputs(this);
  }
}

export class CreateLockCall__Inputs {
  _call: CreateLockCall;

  constructor(call: CreateLockCall) {
    this._call = call;
  }

  get _tag(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _lockAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _fee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _lockTime(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _unlockTime(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateLockCall__Outputs {
  _call: CreateLockCall;

  constructor(call: CreateLockCall) {
    this._call = call;
  }

  get lockIndex(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _factoryAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _feeSplitterContract(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitiateWithdrawalCall extends ethereum.Call {
  get inputs(): InitiateWithdrawalCall__Inputs {
    return new InitiateWithdrawalCall__Inputs(this);
  }

  get outputs(): InitiateWithdrawalCall__Outputs {
    return new InitiateWithdrawalCall__Outputs(this);
  }
}

export class InitiateWithdrawalCall__Inputs {
  _call: InitiateWithdrawalCall;

  constructor(call: InitiateWithdrawalCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lockIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitiateWithdrawalCall__Outputs {
  _call: InitiateWithdrawalCall;

  constructor(call: InitiateWithdrawalCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class PanicCall extends ethereum.Call {
  get inputs(): PanicCall__Inputs {
    return new PanicCall__Inputs(this);
  }

  get outputs(): PanicCall__Outputs {
    return new PanicCall__Outputs(this);
  }
}

export class PanicCall__Inputs {
  _call: PanicCall;

  constructor(call: PanicCall) {
    this._call = call;
  }
}

export class PanicCall__Outputs {
  _call: PanicCall;

  constructor(call: PanicCall) {
    this._call = call;
  }
}

export class Panic1Call extends ethereum.Call {
  get inputs(): Panic1Call__Inputs {
    return new Panic1Call__Inputs(this);
  }

  get outputs(): Panic1Call__Outputs {
    return new Panic1Call__Outputs(this);
  }
}

export class Panic1Call__Inputs {
  _call: Panic1Call;

  constructor(call: Panic1Call) {
    this._call = call;
  }

  get _signature(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class Panic1Call__Outputs {
  _call: Panic1Call;

  constructor(call: Panic1Call) {
    this._call = call;
  }
}

export class RecoverExpiredVaultCall extends ethereum.Call {
  get inputs(): RecoverExpiredVaultCall__Inputs {
    return new RecoverExpiredVaultCall__Inputs(this);
  }

  get outputs(): RecoverExpiredVaultCall__Outputs {
    return new RecoverExpiredVaultCall__Outputs(this);
  }
}

export class RecoverExpiredVaultCall__Inputs {
  _call: RecoverExpiredVaultCall;

  constructor(call: RecoverExpiredVaultCall) {
    this._call = call;
  }

  get _originalOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecoverExpiredVaultCall__Outputs {
  _call: RecoverExpiredVaultCall;

  constructor(call: RecoverExpiredVaultCall) {
    this._call = call;
  }
}

export class RecoverVaultCall extends ethereum.Call {
  get inputs(): RecoverVaultCall__Inputs {
    return new RecoverVaultCall__Inputs(this);
  }

  get outputs(): RecoverVaultCall__Outputs {
    return new RecoverVaultCall__Outputs(this);
  }
}

export class RecoverVaultCall__Inputs {
  _call: RecoverVaultCall;

  constructor(call: RecoverVaultCall) {
    this._call = call;
  }

  get _originalOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RecoverVaultCall__Outputs {
  _call: RecoverVaultCall;

  constructor(call: RecoverVaultCall) {
    this._call = call;
  }
}

export class SendWithdrawalCall extends ethereum.Call {
  get inputs(): SendWithdrawalCall__Inputs {
    return new SendWithdrawalCall__Inputs(this);
  }

  get outputs(): SendWithdrawalCall__Outputs {
    return new SendWithdrawalCall__Outputs(this);
  }
}

export class SendWithdrawalCall__Inputs {
  _call: SendWithdrawalCall;

  constructor(call: SendWithdrawalCall) {
    this._call = call;
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _lockIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SendWithdrawalCall__Outputs {
  _call: SendWithdrawalCall;

  constructor(call: SendWithdrawalCall) {
    this._call = call;
  }
}

export class ValidateRecoveryAddressHashCall extends ethereum.Call {
  get inputs(): ValidateRecoveryAddressHashCall__Inputs {
    return new ValidateRecoveryAddressHashCall__Inputs(this);
  }

  get outputs(): ValidateRecoveryAddressHashCall__Outputs {
    return new ValidateRecoveryAddressHashCall__Outputs(this);
  }
}

export class ValidateRecoveryAddressHashCall__Inputs {
  _call: ValidateRecoveryAddressHashCall;

  constructor(call: ValidateRecoveryAddressHashCall) {
    this._call = call;
  }

  get _recoveryAddressHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _signature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ValidateRecoveryAddressHashCall__Outputs {
  _call: ValidateRecoveryAddressHashCall;

  constructor(call: ValidateRecoveryAddressHashCall) {
    this._call = call;
  }
}
